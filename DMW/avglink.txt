Agglomerative algorithm
input : 
D = {t1,t2,...tn}
A = adjacenecy matrix showing distance between elements
output : 
DE = dendograms representetd as a set of triples

Average Agglomerative algorithm 
d = 0;
k = n;
K = {{t1},{t2},...{tn}} // all elements in their own cluster

DE = {d,k,K} //initialize a dendogram with each element
MST(A) // denerate a MST from teh adjacency matrix


repeat : 
    old k = k 
    d = d + 0.5
    for each pair fo Ki,Kj E K :
        ave = average distance between all ti E Ki and tj E Kj;
        if ave <= d : 
            K  = K - {Ki} -{Kj} U {Ki U Kj};
            k = oldk -1;
            DE = DE u {d,k,K};

until k = 1;



